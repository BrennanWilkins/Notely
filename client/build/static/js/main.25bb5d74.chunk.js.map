{"version":3,"sources":["axios.js","containers/Productivity/store/actions/actionTypes.js","components/ErrorDisplay/ErrorDisplay.module.css","components/Spinner/Spinner.module.css","containers/Auth/Auth.module.css","components/ErrorDisplay/ErrorDisplay.js","components/Spinner/Spinner.js","containers/Auth/Auth.js","containers/Productivity/store/reducers/pomodoro.js","containers/Productivity/store/reducers/timer.js","containers/Productivity/store/reducers/stopwatch.js","App.js","serviceWorker.js","index.js"],"names":["instance","axios","create","baseURL","authInstance","RESET_STOPWATCH","STOP_STOPWATCH","STOPWATCH_START","SET_STOPWATCH_TIME","STOPWATCH_FIRST_START","SET_LAP_TIME","CHANGE_POMODORO","RESET_POMODORO","STOP_POMODORO","POMODORO_START","POMODORO_FINISHED","POMODORO_CYCLE_END","CHANGE_TIMER","RESET_TIMER","SET_FIRST_START","PAUSE_TIMER","TIMER_START","TIMER_CYCLE_END","module","exports","ErrorBoundary","state","hasError","error","info","this","setState","console","log","className","classes","Error","to","props","children","React","Component","Spinner","loader","Auth","loginInfo","email","password","signupInfo","confirmPassword","errorMsg","loading","remember","checkValidity","emailTest","login","length","test","toggleLoading","prevState","authFailed","loginHandler","e","preventDefault","userData","post","then","res","status","localStorage","setItem","data","token","defaults","headers","common","isAuth","message","catch","err","signupHandler","newUserData","resp","changeLoginInfo","target","name","value","changeSignupInfo","clearFields","toggleRemember","rememberDiv","Remember","Move","join","type","onChange","checked","form","Fragment","Form","onSubmit","placeholder","ErrorMsg","MoveError","undefined","MessageSignup","onClick","MessageLogin","Container","FormContainer","Demo","Header","initialState","displayTime","pomodoroCount","currentMax","sec","min","started","changePomodoro","action","time","resetPomodoro","pomodoroFinished","pomodoroCycleEnd","reducer","actionTypes","hours","maxHours","maxMin","maxSec","firstStart","setFirstStart","displaySec","displayMin","resetTimer","timerCycleEnd","changeTimer","field","Number","lapDisplayTime","fractionSec","lapTime","laps","resetStopwatch","unshift","stopStopwatch","stopwatchStart","setStopwatchTime","stopwatchFirstStart","setLapTime","Notely","lazy","rootReducer","combineReducers","stopwatch","stopwatchReducer","pomodoro","pomodoroReducer","timer","timerReducer","store","createStore","applyMiddleware","thunk","App","handleWindowClose","removeItem","logout","isAuthHandler","window","addEventListener","removeEventListener","routes","exact","path","render","fallback","demo","Boolean","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.25bb5d74.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport const instance = axios.create({\r\n  baseURL: 'https://notely-app.herokuapp.com/api/'\r\n  // baseURL: 'http://localhost:9000/api/'\r\n});\r\n\r\nexport const authInstance = axios.create({\r\n  baseURL: 'https://notely-app.herokuapp.com/api/auth/'\r\n  // baseURL: 'http://localhost:9000/api/auth/'\r\n});\r\n","export const RESET_STOPWATCH = 'RESET_STOPWATCH';\r\nexport const STOP_STOPWATCH = 'STOP_STOPWATCH';\r\nexport const START_LAP_TIMER = 'START_LAP_TIMER';\r\nexport const STOPWATCH_START = 'STOPWATCH_START';\r\nexport const SET_STOPWATCH_TIME = 'SET_STOPWATCH_TIME';\r\nexport const STOPWATCH_FIRST_START = 'STOPWATCH_FIRST_START';\r\nexport const SET_LAP_TIME = 'SET_LAP_TIME';\r\n\r\nexport const CHANGE_POMODORO = 'CHANGE_POMODORO';\r\nexport const RESET_POMODORO = 'RESET_POMODORO';\r\nexport const STOP_POMODORO = 'STOP_POMODORO';\r\nexport const POMODORO_START = 'POMODORO_START';\r\nexport const POMODORO_FINISHED = 'POMODORO_FINISHED';\r\nexport const POMODORO_CYCLE_END = 'POMODORO_CYCLE_END';\r\n\r\nexport const CHANGE_TIMER = 'CHANGE_TIMER';\r\nexport const RESET_TIMER = 'RESET_TIMER';\r\nexport const SET_FIRST_START = 'SET_FIRST_START';\r\nexport const PAUSE_TIMER = 'PAUSE_TIMER';\r\nexport const TIMER_START = 'TIMER_START';\r\nexport const TIMER_CYCLE_END = 'TIMER_CYCLE_END';\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Error\":\"ErrorDisplay_Error__3du5n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Spinner_loader__1zFq3\",\"load4\":\"Spinner_load4__n8VQ5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Auth_Container__x3geK\",\"FormContainer\":\"Auth_FormContainer__2D9TT\",\"Header\":\"Auth_Header__2vIdP\",\"Form\":\"Auth_Form__1PSZq\",\"Demo\":\"Auth_Demo__3sCRP\",\"MessageLogin\":\"Auth_MessageLogin__286ZE\",\"MessageSignup\":\"Auth_MessageSignup__1lohg\",\"Remember\":\"Auth_Remember__zJI4p\",\"ErrorMsg\":\"Auth_ErrorMsg__1V1UP\",\"MoveError\":\"Auth_MoveError__26fNO\",\"Move\":\"Auth_Move__2D-YX\"};","import React from 'react';\r\nimport classes from './ErrorDisplay.module.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass ErrorBoundary extends React.Component {\r\n  state = {\r\n    hasError: false\r\n  }\r\n\r\n  componentDidCatch(error, info) {\r\n    this.setState({ hasError: true });\r\n    console.log(error, info);\r\n  }\r\n\r\n  render() {\r\n    // if there was an error shows custom error display\r\n    if (this.state.hasError) {\r\n      return (\r\n        <div className={classes.Error}>\r\n          <h1>Something went wrong.</h1>\r\n          <Link to=\"/\"><button>Back to Notely Home</button></Link>\r\n        </div>\r\n      );\r\n    }\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","import React from 'react';\r\nimport classes from './Spinner.module.css';\r\n\r\nconst Spinner = props => (\r\n  <div className={classes.loader}>Loading...</div>\r\n);\r\n\r\nexport default Spinner;\r\n","import React, { Component } from 'react';\r\nimport classes from './Auth.module.css';\r\nimport Spinner from '../../components/Spinner/Spinner';\r\nimport { Link } from 'react-router-dom';\r\nimport { authInstance as axios, instance } from '../../axios';\r\n\r\nclass Auth extends Component {\r\n  state = {\r\n    loginInfo: { email: '', password: '' },\r\n    signupInfo: { email: '', password: '', confirmPassword: '' },\r\n    error: false,\r\n    errorMsg: '',\r\n    loading: false,\r\n    remember: false\r\n  }\r\n\r\n  // returns true if input fields are invalid else returns false\r\n  checkValidity = () => {\r\n    // check if email input is a valid email\r\n    const emailTest = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    if (this.props.login) {\r\n      if (this.state.loginInfo.email.length === 0 || this.state.loginInfo.password.length === 0) {\r\n        this.setState({ error: true, errorMsg: 'Email and password must not be empty.' });\r\n        return true;\r\n      } else if (!emailTest.test(this.state.loginInfo.email) || this.state.loginInfo.email.length > 70 ||\r\n        this.state.loginInfo.password.length > 70) {\r\n        this.setState({ error: true, errorMsg: 'There is no account for the email you entered.' });\r\n        return true;\r\n      }\r\n    } else {\r\n      if (!emailTest.test(this.state.signupInfo.email)) {\r\n        this.setState({ error: true, errorMsg: 'Please enter a valid email address.' });\r\n        return true;\r\n      } else if (this.state.signupInfo.email.length === 0 || this.state.signupInfo.password.length === 0) {\r\n        this.setState({ error: true, errorMsg: 'Email and password must not be empty.' });\r\n        return true;\r\n      } else if (this.state.signupInfo.password.length > 70) {\r\n        this.setState({ error: true, errorMsg: 'Password must be less than 70 characters.'});\r\n        return true;\r\n      } else if (this.state.signupInfo.password.length < 7) {\r\n        this.setState({ error: true, errorMsg: 'Password must be at least 7 characters long.'});\r\n        return true;\r\n      } else if (this.state.signupInfo.password !== this.state.signupInfo.confirmPassword) {\r\n        this.setState({ error: true, errorMsg: 'Confirm password must be equal to password.'});\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  // show the spinner if loading\r\n  toggleLoading = () => {\r\n    this.setState(prevState => { return { loading: !prevState.loading, error: false, errorMsg: '' }; });\r\n  }\r\n\r\n  authFailed = (errorMsg) => {\r\n    this.setState({ loading: false, error: true, errorMsg });\r\n  }\r\n\r\n  loginHandler = (e) => {\r\n    e.preventDefault();\r\n    if (this.state.loading) { return; }\r\n    // if not valid then return\r\n    if (this.checkValidity()) { return; }\r\n    this.toggleLoading();\r\n    const userData = { email: this.state.loginInfo.email, password: this.state.loginInfo.password };\r\n    // send login request to server\r\n    axios.post('login', userData).then(res => {\r\n      if (res.status === 200) {\r\n        localStorage.setItem('token', res.data.token);\r\n        instance.defaults.headers.common['x-auth-token'] = res.data.token;\r\n        localStorage.setItem('remember', this.state.remember);\r\n        localStorage.setItem('email', this.state.loginInfo.email);\r\n        return this.props.isAuth();\r\n      }\r\n      // not successful\r\n      this.authFailed(res.data.message);\r\n    }).catch(err => {\r\n      this.authFailed('There was an error logging in.');\r\n    });\r\n  }\r\n\r\n  signupHandler = (e) => {\r\n    e.preventDefault();\r\n    if (this.state.loading) { return; }\r\n    // return if signup form is invalid\r\n    if (this.checkValidity()) { return; }\r\n    this.toggleLoading();\r\n    const userData = { email: this.state.signupInfo.email, password: this.state.signupInfo.password,\r\n    confirmPassword: this.state.signupInfo.confirmPassword };\r\n    // send signup request to server\r\n    axios.post('signup', userData).then(res => {\r\n      if (res.status === 200) {\r\n        const newUserData = { email: this.state.signupInfo.email, password: this.state.signupInfo.password };\r\n        // if signup was successful then try to automatically log user in\r\n        axios.post('login', newUserData).then(resp => {\r\n          if (resp.status === 200) {\r\n            localStorage.setItem('token', resp.data.token);\r\n            instance.defaults.headers.common['x-auth-token'] = resp.data.token;\r\n            localStorage.setItem('remember', this.state.remember);\r\n            localStorage.setItem('email', this.state.signupInfo.email);\r\n            return this.props.isAuth();\r\n          }\r\n          // login not successful\r\n          return this.authFailed('There was an error signing up.');\r\n        }).catch(error => {\r\n          this.authFailed('There was an error signing up.');\r\n        });\r\n      }\r\n      // signup not successful\r\n      this.authFailed('There was an error signing up.');\r\n    }).catch(err => {\r\n      this.authFailed('There was an error signing up.');\r\n    });\r\n  }\r\n\r\n  changeLoginInfo = (e) => {\r\n    if (this.state.loading) { return; }\r\n    const loginInfo = { ...this.state.loginInfo };\r\n    loginInfo[e.target.name] = e.target.value;\r\n    this.setState({ loginInfo, error: false, errorMsg: '' });\r\n  }\r\n\r\n  changeSignupInfo = (e) => {\r\n    if (this.state.loading) { return; }\r\n    const signupInfo = { ...this.state.signupInfo };\r\n    signupInfo[e.target.name] = e.target.value;\r\n    this.setState({ signupInfo, error: false, errorMsg: '' });\r\n  }\r\n\r\n  clearFields = () => {\r\n    this.setState({\r\n      loginInfo: { email: '', password: '' },\r\n      signupInfo: { email: '', password: '', confirmPassword: '' },\r\n      loading: false,\r\n      error: false,\r\n      errorMsg: '',\r\n      remember: false\r\n    });\r\n  }\r\n\r\n  // called when remember me button clicked\r\n  toggleRemember = () => {\r\n    this.setState(prevState => { return { remember: !prevState.remember }; });\r\n  }\r\n\r\n  render() {\r\n    const rememberDiv = (\r\n      <div className={this.state.error ? [classes.Remember, classes.Move].join(' ') : classes.Remember}>\r\n        <input type=\"checkbox\" onChange={this.toggleRemember} checked={this.state.remember}/>\r\n        <p>Remember me</p>\r\n      </div>\r\n    );\r\n    const form = this.props.login ? (\r\n      <React.Fragment>\r\n        <form className={classes.Form} onSubmit={this.loginHandler}>\r\n          <input type=\"text\" placeholder=\"Email\" name=\"email\" value={this.state.loginInfo.email}\r\n          onChange={this.changeLoginInfo}/>\r\n          <input type=\"password\" placeholder=\"Password\" name=\"password\" value={this.state.loginInfo.password}\r\n          onChange={this.changeLoginInfo}/>\r\n          <p className={this.state.error ? [classes.ErrorMsg, classes.MoveError].join(' ') : classes.ErrorMsg}>\r\n            {this.state.errorMsg}\r\n          </p>\r\n          <button className={this.state.error ? classes.Move: undefined}>{this.props.login ? 'login' : 'create'}</button>\r\n        </form>\r\n        {rememberDiv}\r\n      </React.Fragment>\r\n    ) : (\r\n      <React.Fragment>\r\n        <form className={classes.Form} onSubmit={this.signupHandler}>\r\n          <input type=\"text\" placeholder=\"Email\" name=\"email\" value={this.state.signupInfo.email}\r\n          onChange={this.changeSignupInfo}/>\r\n          <input type=\"password\" placeholder=\"Password\" name=\"password\" value={this.state.signupInfo.password}\r\n          onChange={this.changeSignupInfo}/>\r\n          <input type=\"password\" placeholder=\"Confirm Password\" name=\"confirmPassword\" value={this.state.signupInfo.confirmPassword}\r\n          onChange={this.changeSignupInfo}/>\r\n          <p className={this.state.error ? [classes.ErrorMsg, classes.MoveError].join(' ') : classes.ErrorMsg}>\r\n            {this.state.errorMsg}\r\n          </p>\r\n          <button className={this.state.error ? classes.Move: undefined}>{this.props.login ? 'login' : 'create'}</button>\r\n        </form>\r\n        {rememberDiv}\r\n      </React.Fragment>\r\n    );\r\n    const message = this.props.login ? (\r\n      <p className={classes.MessageSignup}>Not registered? <Link to=\"/signup\" onClick={this.clearFields}>Create an account</Link></p>\r\n    ) : (\r\n      <p className={classes.MessageLogin}>Already registered? <Link to=\"/login\" onClick={this.clearFields}>Login</Link></p>\r\n    );\r\n    return (\r\n      <div className={classes.Container}>\r\n        <div className={classes.FormContainer}>\r\n          <p className={classes.Demo}>See a demo <Link to=\"/demo\" onClick={this.clearFields}>here</Link></p>\r\n          <h1 className={classes.Header}>Notely</h1>\r\n          {form}\r\n          {this.state.loading && <Spinner />}\r\n          {message}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Auth;\r\n","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n  displayTime: '25:00',\r\n  pomodoroCount: 0,\r\n  currentMax: 25,\r\n  sec: 0,\r\n  min: 25,\r\n  started: false\r\n};\r\n\r\n// set the current mode of the timer (pomodoro/short break/long break)\r\nconst changePomodoro = (state, action) => {\r\n  const displayTime = `${action.time}:00`;\r\n  return { ...state, min: action.time, sec: 0, started: false, currentMax: action.time, displayTime };\r\n};\r\n\r\nconst resetPomodoro = (state, action) => {\r\n  const displayTime = `${state.currentMax}:00`;\r\n  return { ...state, started: false, min: state.currentMax, sec: 0, displayTime };\r\n};\r\n\r\nconst pomodoroFinished = (state, action) => {\r\n  const displayTime = `${state.currentMax}:00`;\r\n  let pomodoroCount = state.pomodoroCount + 1;\r\n  return { ...state, started: false, min: state.currentMax, sec: 0, displayTime, pomodoroCount };\r\n};\r\n\r\n// called after every 1000ms cycle of timerFunc\r\nconst pomodoroCycleEnd = (state, action) => {\r\n  return { ...state, displayTime: action.displayTime, sec: action.sec, min: action.min };\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch(action.type) {\r\n    case actionTypes.CHANGE_POMODORO: return changePomodoro(state, action);\r\n    case actionTypes.RESET_POMODORO: return resetPomodoro(state, action);\r\n    case actionTypes.STOP_POMODORO: return { ...state, started: false };\r\n    case actionTypes.POMODORO_START: return { ...state, started: true };\r\n    case actionTypes.POMODORO_FINISHED: return pomodoroFinished(state, action);\r\n    case actionTypes.POMODORO_CYCLE_END: return pomodoroCycleEnd(state, action);\r\n    default: return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n  displayTime: '',\r\n  hours: 0,\r\n  maxHours: 0,\r\n  min: 0,\r\n  maxMin: 0,\r\n  sec: 0,\r\n  maxSec: 0,\r\n  started: false,\r\n  firstStart: false\r\n};\r\n\r\n// initializes time display when timer starts\r\nconst setFirstStart = (state, action) => {\r\n  const displaySec = state.maxSec < 10 ? '0' + state.maxSec : state.maxSec;\r\n  const displayMin = state.maxMin < 10 ? '0' + state.maxMin : state.maxMin;\r\n  const displayTime = state.maxHours === 0 ? `${state.min}:${displaySec}` : `${state.hours}:${displayMin}:${displaySec}`;\r\n  return { ...state, firstStart: true, displayTime };\r\n};\r\n\r\n// resets timer time display & sets all time counts back to original values\r\nconst resetTimer = (state, action) => {\r\n  const displaySec = state.maxSec < 10 ? '0' + state.maxSec : state.maxSec;\r\n  const displayMin = state.maxMin < 10 ? '0' + state.maxMin : state.maxMin;\r\n  const displayTime = state.maxHours === 0 ? `${state.maxMin}:${displaySec}` : `${state.maxHours}:${displayMin}:${displaySec}`;\r\n  return { ...state, started: false, firstStart: false, hours: state.maxHours, min: state.maxMin, sec: state.maxSec, displayTime };\r\n};\r\n\r\n// called after every 1000ms cycle of timerFunc\r\nconst timerCycleEnd = (state, action) => {\r\n  const displaySec = action.sec < 10 ? '0' + action.sec : action.sec;\r\n  const displayMin = action.min < 10 ? '0' + action.min : action.min;\r\n  const displayTime = action.hours === 0 ? `${action.min}:${displaySec}` : `${action.hours}:${displayMin}:${displaySec}`;\r\n  return { ...state, hours: action.hours, min: action.min, sec: action.sec, displayTime };\r\n};\r\n\r\n// update the input values\r\nconst changeTimer = (state, action) => {\r\n  // cant have negative time\r\n  if (action.e.value < 0) { return { ...state }; }\r\n  const field = action.e.name === 'maxHours' ? 'hours' : action.e.name === 'maxMin' ? 'min' : 'sec';\r\n  const value = Number(action.e.value);\r\n  return { ...state, [action.e.name]: value, [field]: value };\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch(action.type) {\r\n    case actionTypes.SET_FIRST_START: return setFirstStart(state, action);\r\n    case actionTypes.PAUSE_TIMER: return { ...state, started: false };\r\n    case actionTypes.TIMER_START: return { ...state, started: true };\r\n    case actionTypes.RESET_TIMER: return resetTimer(state, action);\r\n    case actionTypes.TIMER_CYCLE_END: return timerCycleEnd(state, action);\r\n    case actionTypes.CHANGE_TIMER: return changeTimer(state, action);\r\n    default: return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n  displayTime: '00:00.0',\r\n  lapDisplayTime: '00:00.0',\r\n  time: {\r\n    fractionSec: 0,\r\n    sec: 0,\r\n    min: 0,\r\n    started: false\r\n  },\r\n  lapTime: {\r\n    fractionSec: 0,\r\n    sec: 0,\r\n    min: 0,\r\n    started: false\r\n  },\r\n  laps: [],\r\n  firstStart: false\r\n};\r\n\r\nconst resetStopwatch = (state, action) => {\r\n  // resets time & laps if left control button in reset mode\r\n  if (!state.time.started) {\r\n    const time = { ...state.time };\r\n    time.fractionSec = 0;\r\n    time.sec = 0;\r\n    time.min = 0;\r\n    time.started = false;\r\n    const lapTime = { ...state.lapTime };\r\n    lapTime.fractionSec = 0;\r\n    lapTime.sec = 0;\r\n    lapTime.min = 0;\r\n    lapTime.started = false;\r\n    return { ...state, time, lapTime, displayTime: '00:00.0', laps: [], firstStart: false };\r\n  }\r\n  // creates a new lap if left control button in lap mode\r\n  const lapTime = { ...state.lapTime };\r\n  const displaySec = lapTime.sec < 10 ? '0' + lapTime.sec : lapTime.sec;\r\n  const displayMin = lapTime.min < 10 ? '0' + lapTime.min : lapTime.min;\r\n  const lapDisplayTime = `${displayMin}:${displaySec}.${lapTime.fractionSec}`;\r\n  lapTime.fractionSec = 0;\r\n  lapTime.sec = 0;\r\n  lapTime.min = 0;\r\n  lapTime.started = false;\r\n  const laps = [...state.laps];\r\n  laps.unshift(state.lapDisplayTime);\r\n  return { ...state, lapTime, lapDisplayTime, laps };\r\n};\r\n\r\nconst stopStopwatch = (state, action) => {\r\n  const time = { ...state.time };\r\n  time.started = false;\r\n  return { ...state, time };\r\n};\r\n\r\nconst stopwatchStart = (state, action) => {\r\n  const time = { ...state.time };\r\n  time.started = true;\r\n  const lapTime = { ...state.lapTime };\r\n  lapTime.started = true;\r\n  return { ...state, time, lapTime };\r\n};\r\n\r\nconst setStopwatchTime = (state, action) => {\r\n  return { ...state, time: action.time, displayTime: action.displayTime };\r\n};\r\n\r\nconst stopwatchFirstStart = (state, action) => {\r\n  return { ...state, firstStart: true };\r\n};\r\n\r\nconst setLapTime = (state, action) => {\r\n  return { ...state, lapTime: action.lapTime, lapDisplayTime: action.lapDisplayTime };\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.RESET_STOPWATCH: return resetStopwatch(state, action);\r\n    case actionTypes.STOP_STOPWATCH: return stopStopwatch(state, action);\r\n    case actionTypes.STOPWATCH_START: return stopwatchStart(state, action);\r\n    case actionTypes.SET_STOPWATCH_TIME: return setStopwatchTime(state, action);\r\n    case actionTypes.STOPWATCH_FIRST_START: return stopwatchFirstStart(state, action);\r\n    case actionTypes.SET_LAP_TIME: return setLapTime(state, action);\r\n    default: return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import React, { Component, Suspense } from 'react';\r\nimport ErrorBoundary from './components/ErrorDisplay/ErrorDisplay';\r\nimport Auth from './containers/Auth/Auth';\r\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\r\nimport Spinner from './components/Spinner/Spinner';\r\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport thunk from 'redux-thunk';\r\nimport pomodoroReducer from './containers/Productivity/store/reducers/pomodoro';\r\nimport timerReducer from './containers/Productivity/store/reducers/timer';\r\nimport stopwatchReducer from './containers/Productivity/store/reducers/stopwatch';\r\nimport { instance } from './axios';\r\nconst Notely = React.lazy(() => import('./containers/Notely'));\r\n\r\nconst rootReducer = combineReducers({\r\n  stopwatch: stopwatchReducer,\r\n  pomodoro: pomodoroReducer,\r\n  timer: timerReducer\r\n});\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\nclass App extends Component {\r\n  state = {\r\n    isAuth: false\r\n  }\r\n\r\n  handleWindowClose = () => {\r\n    // if remember me not chosen, log user out when window closes\r\n    if (localStorage['remember'] === 'false') {\r\n      localStorage.removeItem('token');\r\n      localStorage.removeItem('remember');\r\n      localStorage.removeItem('email');\r\n    }\r\n  }\r\n\r\n  logout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('remember');\r\n    localStorage.removeItem('email');\r\n    delete instance.defaults.headers.common['x-auth-token'];\r\n    this.setState({ isAuth: false });\r\n  }\r\n\r\n  componentDidMount() {\r\n    // event listener for closing the window\r\n    window.addEventListener('beforeunload', this.handleWindowClose);\r\n    const token = localStorage['token'];\r\n    // if ls contains token, user is authenticated\r\n    if (token) {\r\n      instance.defaults.headers.common['x-auth-token'] = token;\r\n      this.setState({ isAuth: true });\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    // remove window close event listener on unmount\r\n    window.removeEventListener('beforeunload', this.handleWindowClose);\r\n  }\r\n\r\n  isAuthHandler = () => {\r\n    this.setState({ isAuth: true });\r\n  }\r\n\r\n  render() {\r\n    // if user is authenticated, load Notely, else provide the other routes\r\n    // any unknown routes redirects to \"/\" route\r\n    const routes = this.state.isAuth ? (\r\n      <Switch>\r\n        <Route exact path=\"/\" render={() =>\r\n          <Suspense fallback={<Spinner />}>\r\n            <Notely logout={this.logout} demo={false}/>\r\n          </Suspense>\r\n        } />\r\n        <Redirect to=\"/\" />\r\n      </Switch>\r\n    ) : (\r\n      <Switch>\r\n        <Route exact path=\"/login\" render={() => <Auth login={true} isAuth={this.isAuthHandler}/>} />\r\n        <Route exact path=\"/signup\" render={() => <Auth login={false} isAuth={this.isAuthHandler}/>} />\r\n        <Route exact path=\"/demo\" render={() => <Suspense fallback={<Spinner />}><Notely demo /></Suspense>} />\r\n        <Redirect to=\"/login\" />\r\n      </Switch>\r\n    );\r\n    // store is provided to persist the productivity state\r\n    return (\r\n      <Provider store={store}>\r\n        <BrowserRouter>\r\n          <ErrorBoundary>\r\n            {routes}\r\n          </ErrorBoundary>\r\n        </BrowserRouter>\r\n      </Provider>\r\n    );\r\n  }\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}