{"version":3,"sources":["axios.js","containers/Productivity/store/actions/actionTypes.js","components/ErrorDisplay/ErrorDisplay.module.css","components/Spinner/Spinner.module.css","containers/Auth/Auth.module.css","components/ErrorDisplay/ErrorDisplay.js","components/Spinner/Spinner.js","containers/Auth/Auth.js","containers/Productivity/store/reducers/pomodoro.js","containers/Productivity/store/reducers/timer.js","containers/Productivity/store/reducers/stopwatch.js","App.js","serviceWorker.js","index.js"],"names":["instance","axios","create","baseURL","authInstance","RESET_STOPWATCH","STOP_STOPWATCH","STOPWATCH_START","SET_STOPWATCH_TIME","STOPWATCH_FIRST_START","SET_LAP_TIME","CHANGE_POMODORO","RESET_POMODORO","STOP_POMODORO","POMODORO_START","POMODORO_FINISHED","POMODORO_CYCLE_END","CHANGE_TIMER","RESET_TIMER","SET_FIRST_START","PAUSE_TIMER","TIMER_START","TIMER_CYCLE_END","module","exports","ErrorBoundary","state","hasError","error","info","this","setState","console","log","className","classes","Error","to","props","children","React","Component","Spinner","loader","Auth","loginInfo","email","password","signupInfo","confirmPassword","errorMsg","loading","remember","checkValidity","emailTest","login","length","test","toggleLoading","prevState","authFailed","loginHandler","e","preventDefault","userData","post","then","res","status","localStorage","setItem","data","token","defaults","headers","common","userId","isAuth","message","catch","err","signupHandler","newUserData","resp","changeLoginInfo","target","name","value","changeSignupInfo","clearFields","toggleRemember","rememberDiv","Remember","Move","join","type","onChange","checked","form","Fragment","Form","onSubmit","placeholder","LoginError","MoveError","undefined","SignupError","MessageSignup","onClick","MessageLogin","Container","FormContainer","Demo","Header","initialState","displayTime","pomodoroCount","currentMax","sec","min","started","changePomodoro","action","time","resetPomodoro","pomodoroFinished","pomodoroCycleEnd","reducer","actionTypes","hours","maxHours","maxMin","maxSec","firstStart","setFirstStart","displaySec","displayMin","resetTimer","timerCycleEnd","changeTimer","field","Number","lapDisplayTime","fractionSec","lapTime","laps","resetStopwatch","unshift","stopStopwatch","stopwatchStart","setStopwatchTime","stopwatchFirstStart","setLapTime","Notely","lazy","rootReducer","combineReducers","stopwatch","stopwatchReducer","pomodoro","pomodoroReducer","timer","timerReducer","store","createStore","applyMiddleware","thunk","App","handleWindowClose","removeItem","logout","isAuthHandler","window","addEventListener","removeEventListener","routes","exact","path","render","fallback","demo","Boolean","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.62561bb6.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport const instance = axios.create({\r\n  baseURL: 'https://notely-app.herokuapp.com/api/'\r\n});\r\n\r\nexport const authInstance = axios.create({\r\n  baseURL: 'https://notely-app.herokuapp.com/api/auth/'\r\n});\r\n","export const RESET_STOPWATCH = 'RESET_STOPWATCH';\r\nexport const STOP_STOPWATCH = 'STOP_STOPWATCH';\r\nexport const START_LAP_TIMER = 'START_LAP_TIMER';\r\nexport const STOPWATCH_START = 'STOPWATCH_START';\r\nexport const SET_STOPWATCH_TIME = 'SET_STOPWATCH_TIME';\r\nexport const STOPWATCH_FIRST_START = 'STOPWATCH_FIRST_START';\r\nexport const SET_LAP_TIME = 'SET_LAP_TIME';\r\n\r\nexport const CHANGE_POMODORO = 'CHANGE_POMODORO';\r\nexport const RESET_POMODORO = 'RESET_POMODORO';\r\nexport const STOP_POMODORO = 'STOP_POMODORO';\r\nexport const POMODORO_START = 'POMODORO_START';\r\nexport const POMODORO_FINISHED = 'POMODORO_FINISHED';\r\nexport const POMODORO_CYCLE_END = 'POMODORO_CYCLE_END';\r\n\r\nexport const CHANGE_TIMER = 'CHANGE_TIMER';\r\nexport const RESET_TIMER = 'RESET_TIMER';\r\nexport const SET_FIRST_START = 'SET_FIRST_START';\r\nexport const PAUSE_TIMER = 'PAUSE_TIMER';\r\nexport const TIMER_START = 'TIMER_START';\r\nexport const TIMER_CYCLE_END = 'TIMER_CYCLE_END';\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Error\":\"ErrorDisplay_Error__1pJNu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Spinner_loader__3Czad\",\"load4\":\"Spinner_load4__1oANX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Auth_Container__1Ogsq\",\"FormContainer\":\"Auth_FormContainer__3Dgx8\",\"Header\":\"Auth_Header__1NxGa\",\"Form\":\"Auth_Form__1iIZa\",\"Demo\":\"Auth_Demo__Z0xvL\",\"MessageLogin\":\"Auth_MessageLogin__2Vy-F\",\"MessageSignup\":\"Auth_MessageSignup__blaIw\",\"Remember\":\"Auth_Remember__3qafN\",\"LoginError\":\"Auth_LoginError__2lse-\",\"SignupError\":\"Auth_SignupError__7FNFD\",\"MoveError\":\"Auth_MoveError__2o6IY\",\"Move\":\"Auth_Move__3gfsg\"};","import React from 'react';\r\nimport classes from './ErrorDisplay.module.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass ErrorBoundary extends React.Component {\r\n  state = {\r\n    hasError: false\r\n  }\r\n\r\n  componentDidCatch(error, info) {\r\n    this.setState({ hasError: true });\r\n    console.log(error, info);\r\n  }\r\n\r\n  render() {\r\n    // if there was an error shows custom error display\r\n    if (this.state.hasError) {\r\n      return (\r\n        <div className={classes.Error}>\r\n          <h1>Something went wrong.</h1>\r\n          <Link to=\"/\"><button>Back to Notely Home</button></Link>\r\n        </div>\r\n      );\r\n    }\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","import React from 'react';\r\nimport classes from './Spinner.module.css';\r\n\r\nconst Spinner = props => (\r\n  <div className={classes.loader}>Loading...</div>\r\n);\r\n\r\nexport default Spinner;\r\n","import React, { Component } from 'react';\r\nimport classes from './Auth.module.css';\r\nimport Spinner from '../../components/Spinner/Spinner';\r\nimport { Link } from 'react-router-dom';\r\nimport { authInstance as axios, instance } from '../../axios';\r\n\r\nclass Auth extends Component {\r\n  state = {\r\n    loginInfo: { email: '', password: '' },\r\n    signupInfo: { email: '', password: '', confirmPassword: '' },\r\n    error: false,\r\n    errorMsg: '',\r\n    loading: false,\r\n    remember: false\r\n  }\r\n\r\n  // returns true if input fields are invalid else returns false\r\n  checkValidity = () => {\r\n    // check if email input is a valid email\r\n    const emailTest = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    if (this.props.login) {\r\n      if (this.state.loginInfo.email.length === 0 || this.state.loginInfo.password.length === 0) {\r\n        this.setState({ error: true, errorMsg: 'Email and password must not be empty.' });\r\n        return true;\r\n      } else if (!emailTest.test(this.state.loginInfo.email) || this.state.loginInfo.email.length > 70 ||\r\n        this.state.loginInfo.password.length > 70) {\r\n        this.setState({ error: true, errorMsg: 'There is no account for the email you entered.' });\r\n        return true;\r\n      }\r\n    } else {\r\n      if (!emailTest.test(this.state.signupInfo.email)) {\r\n        this.setState({ error: true, errorMsg: 'Please enter a valid email address.' });\r\n        return true;\r\n      } else if (this.state.signupInfo.email.length === 0 || this.state.signupInfo.password.length === 0) {\r\n        this.setState({ error: true, errorMsg: 'Email and password must not be empty.' });\r\n        return true;\r\n      } else if (this.state.signupInfo.password.length > 70) {\r\n        this.setState({ error: true, errorMsg: 'Password must be less than 70 characters.'});\r\n        return true;\r\n      } else if (this.state.signupInfo.password.length < 7) {\r\n        this.setState({ error: true, errorMsg: 'Password must be at least 7 characters long.'});\r\n        return true;\r\n      } else if (this.state.signupInfo.password !== this.state.signupInfo.confirmPassword) {\r\n        this.setState({ error: true, errorMsg: 'Confirm password must be equal to password.'});\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  // show the spinner if loading\r\n  toggleLoading = () => {\r\n    this.setState(prevState => { return { loading: !prevState.loading, error: false, errorMsg: '' }; });\r\n  }\r\n\r\n  authFailed = (errorMsg) => {\r\n    this.setState({ loading: false, error: true, errorMsg });\r\n  }\r\n\r\n  loginHandler = (e) => {\r\n    e.preventDefault();\r\n    if (this.state.loading) { return; }\r\n    // if not valid then return\r\n    if (this.checkValidity()) { return; }\r\n    this.toggleLoading();\r\n    const userData = { email: this.state.loginInfo.email, password: this.state.loginInfo.password };\r\n    // send login request to server\r\n    axios.post('login', userData).then(res => {\r\n      if (res.status === 200) {\r\n        localStorage.setItem('token', res.data.token);\r\n        instance.defaults.headers.common['x-auth-token'] = res.data.token;\r\n        localStorage.setItem('userId', res.data.userId);\r\n        localStorage.setItem('remember', this.state.remember);\r\n        localStorage.setItem('email', this.state.loginInfo.email);\r\n        return this.props.isAuth();\r\n      }\r\n      // not successful\r\n      this.authFailed(res.data.message);\r\n    }).catch(err => {\r\n      this.authFailed('There was an error logging in.');\r\n    });\r\n  }\r\n\r\n  signupHandler = (e) => {\r\n    e.preventDefault();\r\n    if (this.state.loading) { return; }\r\n    // return if signup form is invalid\r\n    if (this.checkValidity()) { return; }\r\n    this.toggleLoading();\r\n    const userData = { email: this.state.signupInfo.email, password: this.state.signupInfo.password,\r\n    confirmPassword: this.state.signupInfo.confirmPassword };\r\n    // send signup request to server\r\n    axios.post('signup', userData).then(res => {\r\n      if (res.status === 200) {\r\n        const newUserData = { email: this.state.signupInfo.email, password: this.state.signupInfo.password };\r\n        // if signup was successful then try to automatically log user in\r\n        axios.post('login', newUserData).then(resp => {\r\n          if (resp.status === 200) {\r\n            localStorage.setItem('token', resp.data.token);\r\n            instance.defaults.headers.common['x-auth-token'] = resp.data.token;\r\n            localStorage.setItem('userId', resp.data.userId);\r\n            localStorage.setItem('remember', this.state.remember);\r\n            localStorage.setItem('email', this.state.signupInfo.email);\r\n            return this.props.isAuth();\r\n          }\r\n          // login not successful\r\n          return this.authFailed('There was an error signing up.');\r\n        }).catch(error => {\r\n          this.authFailed('There was an error signing up.');\r\n        });\r\n      }\r\n      // signup not successful\r\n      this.authFailed('There was an error signing up.');\r\n    }).catch(err => {\r\n      this.authFailed('There was an error signing up.');\r\n    });\r\n  }\r\n\r\n  changeLoginInfo = (e) => {\r\n    if (this.state.loading) { return; }\r\n    const loginInfo = { ...this.state.loginInfo };\r\n    loginInfo[e.target.name] = e.target.value;\r\n    this.setState({ loginInfo, error: false, errorMsg: '' });\r\n  }\r\n\r\n  changeSignupInfo = (e) => {\r\n    if (this.state.loading) { return; }\r\n    const signupInfo = { ...this.state.signupInfo };\r\n    signupInfo[e.target.name] = e.target.value;\r\n    this.setState({ signupInfo, error: false, errorMsg: '' });\r\n  }\r\n\r\n  clearFields = () => {\r\n    this.setState({\r\n      loginInfo: { email: '', password: '' },\r\n      signupInfo: { email: '', password: '', confirmPassword: '' },\r\n      loading: false,\r\n      error: false,\r\n      errorMsg: '',\r\n      remember: false\r\n    });\r\n  }\r\n\r\n  // called when remember me button clicked\r\n  toggleRemember = () => {\r\n    this.setState(prevState => { return { remember: !prevState.remember }; });\r\n  }\r\n\r\n  render() {\r\n    const rememberDiv = (\r\n      <div className={this.state.error ? [classes.Remember, classes.Move].join(' ') : classes.Remember}>\r\n        <input type=\"checkbox\" onChange={this.toggleRemember} checked={this.state.remember}/>\r\n        <p>Remember me</p>\r\n      </div>\r\n    );\r\n    const form = this.props.login ? (\r\n      <React.Fragment>\r\n        <form className={classes.Form} onSubmit={this.loginHandler}>\r\n          <input type=\"text\" placeholder=\"Email\" name=\"email\" value={this.state.loginInfo.email}\r\n          onChange={this.changeLoginInfo}/>\r\n          <input type=\"password\" placeholder=\"Password\" name=\"password\" value={this.state.loginInfo.password}\r\n          onChange={this.changeLoginInfo}/>\r\n          <p className={this.state.error ? [classes.LoginError, classes.MoveError].join(' ') : classes.LoginError}>\r\n            {this.state.errorMsg}\r\n          </p>\r\n          <button className={this.state.error ? classes.Move: undefined}>{this.props.login ? 'login' : 'create'}</button>\r\n        </form>\r\n        {rememberDiv}\r\n      </React.Fragment>\r\n    ) : (\r\n      <React.Fragment>\r\n        <form className={classes.Form} onSubmit={this.signupHandler}>\r\n          <input type=\"text\" placeholder=\"Email\" name=\"email\" value={this.state.signupInfo.email}\r\n          onChange={this.changeSignupInfo}/>\r\n          <input type=\"password\" placeholder=\"Password\" name=\"password\" value={this.state.signupInfo.password}\r\n          onChange={this.changeSignupInfo}/>\r\n          <input type=\"password\" placeholder=\"Confirm Password\" name=\"confirmPassword\" value={this.state.signupInfo.confirmPassword}\r\n          onChange={this.changeSignupInfo}/>\r\n          <p className={this.state.error ? [classes.SignupError, classes.MoveError].join(' ') : classes.SignupError}>\r\n            {this.state.errorMsg}\r\n          </p>\r\n          <button className={this.state.error ? classes.Move: undefined}>{this.props.login ? 'login' : 'create'}</button>\r\n        </form>\r\n        {rememberDiv}\r\n      </React.Fragment>\r\n    );\r\n    const message = this.props.login ? (\r\n      <p className={classes.MessageSignup}>Not registered? <Link to=\"/signup\" onClick={this.clearFields}>Create an account</Link></p>\r\n    ) : (\r\n      <p className={classes.MessageLogin}>Already registered? <Link to=\"/login\" onClick={this.clearFields}>Login</Link></p>\r\n    );\r\n    return (\r\n      <div className={classes.Container}>\r\n        <div className={classes.FormContainer}>\r\n          <p className={classes.Demo}>See a demo <Link to=\"/demo\" onClick={this.clearFields}>here</Link></p>\r\n          <h1 className={classes.Header}>Notely</h1>\r\n          {form}\r\n          {this.state.loading && <Spinner />}\r\n          {message}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Auth;\r\n","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n  displayTime: '25:00',\r\n  pomodoroCount: 0,\r\n  currentMax: 25,\r\n  sec: 0,\r\n  min: 25,\r\n  started: false\r\n};\r\n\r\n// set the current mode of the timer (pomodoro/short break/long break)\r\nconst changePomodoro = (state, action) => {\r\n  const displayTime = `${action.time}:00`;\r\n  return { ...state, min: action.time, sec: 0, started: false, currentMax: action.time, displayTime };\r\n};\r\n\r\nconst resetPomodoro = (state, action) => {\r\n  const displayTime = `${state.currentMax}:00`;\r\n  return { ...state, started: false, min: state.currentMax, sec: 0, displayTime };\r\n};\r\n\r\nconst pomodoroFinished = (state, action) => {\r\n  const displayTime = `${state.currentMax}:00`;\r\n  let pomodoroCount = state.pomodoroCount + 1;\r\n  return { ...state, started: false, min: state.currentMax, sec: 0, displayTime, pomodoroCount };\r\n};\r\n\r\n// called after every 1000ms cycle of timerFunc\r\nconst pomodoroCycleEnd = (state, action) => {\r\n  return { ...state, displayTime: action.displayTime, sec: action.sec, min: action.min };\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch(action.type) {\r\n    case actionTypes.CHANGE_POMODORO: return changePomodoro(state, action);\r\n    case actionTypes.RESET_POMODORO: return resetPomodoro(state, action);\r\n    case actionTypes.STOP_POMODORO: return { ...state, started: false };\r\n    case actionTypes.POMODORO_START: return { ...state, started: true };\r\n    case actionTypes.POMODORO_FINISHED: return pomodoroFinished(state, action);\r\n    case actionTypes.POMODORO_CYCLE_END: return pomodoroCycleEnd(state, action);\r\n    default: return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n  displayTime: '',\r\n  hours: 0,\r\n  maxHours: 0,\r\n  min: 0,\r\n  maxMin: 0,\r\n  sec: 0,\r\n  maxSec: 0,\r\n  started: false,\r\n  firstStart: false\r\n};\r\n\r\n// initializes time display when timer starts\r\nconst setFirstStart = (state, action) => {\r\n  const displaySec = state.maxSec < 10 ? '0' + state.maxSec : state.maxSec;\r\n  const displayMin = state.maxMin < 10 ? '0' + state.maxMin : state.maxMin;\r\n  const displayTime = state.maxHours === 0 ? `${state.min}:${displaySec}` : `${state.hours}:${displayMin}:${displaySec}`;\r\n  return { ...state, firstStart: true, displayTime };\r\n};\r\n\r\n// resets timer time display & sets all time counts back to original values\r\nconst resetTimer = (state, action) => {\r\n  const displaySec = state.maxSec < 10 ? '0' + state.maxSec : state.maxSec;\r\n  const displayMin = state.maxMin < 10 ? '0' + state.maxMin : state.maxMin;\r\n  const displayTime = state.maxHours === 0 ? `${state.maxMin}:${displaySec}` : `${state.maxHours}:${displayMin}:${displaySec}`;\r\n  return { ...state, started: false, firstStart: false, hours: state.maxHours, min: state.maxMin, sec: state.maxSec, displayTime };\r\n};\r\n\r\n// called after every 1000ms cycle of timerFunc\r\nconst timerCycleEnd = (state, action) => {\r\n  const displaySec = action.sec < 10 ? '0' + action.sec : action.sec;\r\n  const displayMin = action.min < 10 ? '0' + action.min : action.min;\r\n  const displayTime = action.hours === 0 ? `${action.min}:${displaySec}` : `${action.hours}:${displayMin}:${displaySec}`;\r\n  return { ...state, hours: action.hours, min: action.min, sec: action.sec, displayTime };\r\n};\r\n\r\n// update the input values\r\nconst changeTimer = (state, action) => {\r\n  // cant have negative time\r\n  if (action.e.value < 0) { return { ...state }; }\r\n  const field = action.e.name === 'maxHours' ? 'hours' : action.e.name === 'maxMin' ? 'min' : 'sec';\r\n  const value = Number(action.e.value);\r\n  return { ...state, [action.e.name]: value, [field]: value };\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch(action.type) {\r\n    case actionTypes.SET_FIRST_START: return setFirstStart(state, action);\r\n    case actionTypes.PAUSE_TIMER: return { ...state, started: false };\r\n    case actionTypes.TIMER_START: return { ...state, started: true };\r\n    case actionTypes.RESET_TIMER: return resetTimer(state, action);\r\n    case actionTypes.TIMER_CYCLE_END: return timerCycleEnd(state, action);\r\n    case actionTypes.CHANGE_TIMER: return changeTimer(state, action);\r\n    default: return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n  displayTime: '00:00.0',\r\n  lapDisplayTime: '00:00.0',\r\n  time: {\r\n    fractionSec: 0,\r\n    sec: 0,\r\n    min: 0,\r\n    started: false\r\n  },\r\n  lapTime: {\r\n    fractionSec: 0,\r\n    sec: 0,\r\n    min: 0,\r\n    started: false\r\n  },\r\n  laps: [],\r\n  firstStart: false\r\n};\r\n\r\nconst resetStopwatch = (state, action) => {\r\n  // resets time & laps if left control button in reset mode\r\n  if (!state.time.started) {\r\n    const time = { ...state.time };\r\n    time.fractionSec = 0;\r\n    time.sec = 0;\r\n    time.min = 0;\r\n    time.started = false;\r\n    const lapTime = { ...state.lapTime };\r\n    lapTime.fractionSec = 0;\r\n    lapTime.sec = 0;\r\n    lapTime.min = 0;\r\n    lapTime.started = false;\r\n    return { ...state, time, lapTime, displayTime: '00:00.0', laps: [], firstStart: false };\r\n  }\r\n  // creates a new lap if left control button in lap mode\r\n  const lapTime = { ...state.lapTime };\r\n  const displaySec = lapTime.sec < 10 ? '0' + lapTime.sec : lapTime.sec;\r\n  const displayMin = lapTime.min < 10 ? '0' + lapTime.min : lapTime.min;\r\n  const lapDisplayTime = `${displayMin}:${displaySec}.${lapTime.fractionSec}`;\r\n  lapTime.fractionSec = 0;\r\n  lapTime.sec = 0;\r\n  lapTime.min = 0;\r\n  lapTime.started = false;\r\n  const laps = [...state.laps];\r\n  laps.unshift(state.lapDisplayTime);\r\n  return { ...state, lapTime, lapDisplayTime, laps };\r\n};\r\n\r\nconst stopStopwatch = (state, action) => {\r\n  const time = { ...state.time };\r\n  time.started = false;\r\n  return { ...state, time };\r\n};\r\n\r\nconst stopwatchStart = (state, action) => {\r\n  const time = { ...state.time };\r\n  time.started = true;\r\n  const lapTime = { ...state.lapTime };\r\n  lapTime.started = true;\r\n  return { ...state, time, lapTime };\r\n};\r\n\r\nconst setStopwatchTime = (state, action) => {\r\n  return { ...state, time: action.time, displayTime: action.displayTime };\r\n};\r\n\r\nconst stopwatchFirstStart = (state, action) => {\r\n  return { ...state, firstStart: true };\r\n};\r\n\r\nconst setLapTime = (state, action) => {\r\n  return { ...state, lapTime: action.lapTime, lapDisplayTime: action.lapDisplayTime };\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.RESET_STOPWATCH: return resetStopwatch(state, action);\r\n    case actionTypes.STOP_STOPWATCH: return stopStopwatch(state, action);\r\n    case actionTypes.STOPWATCH_START: return stopwatchStart(state, action);\r\n    case actionTypes.SET_STOPWATCH_TIME: return setStopwatchTime(state, action);\r\n    case actionTypes.STOPWATCH_FIRST_START: return stopwatchFirstStart(state, action);\r\n    case actionTypes.SET_LAP_TIME: return setLapTime(state, action);\r\n    default: return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import React, { Component, Suspense } from 'react';\nimport ErrorBoundary from './components/ErrorDisplay/ErrorDisplay';\nimport Auth from './containers/Auth/Auth';\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\nimport Spinner from './components/Spinner/Spinner';\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport pomodoroReducer from './containers/Productivity/store/reducers/pomodoro';\nimport timerReducer from './containers/Productivity/store/reducers/timer';\nimport stopwatchReducer from './containers/Productivity/store/reducers/stopwatch';\nimport { instance } from './axios';\nconst Notely = React.lazy(() => import('./containers/Notely'));\n\nconst rootReducer = combineReducers({\n  stopwatch: stopwatchReducer,\n  pomodoro: pomodoroReducer,\n  timer: timerReducer\n});\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nclass App extends Component {\n  state = {\n    isAuth: false\n  }\n\n  handleWindowClose = () => {\n    // if remember me not chosen, log user out when window closes\n    if (localStorage['remember'] === 'false') {\n      localStorage.removeItem('token');\n      localStorage.removeItem('userId');\n      localStorage.removeItem('remember');\n      localStorage.removeItem('email');\n    }\n  }\n\n  logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('userId');\n    localStorage.removeItem('remember');\n    localStorage.removeItem('email');\n    this.setState({ isAuth: false });\n  }\n\n  componentDidMount() {\n    // event listener for closing the window\n    window.addEventListener('beforeunload', this.handleWindowClose);\n    const token = localStorage['token'];\n    const userId = localStorage['userId'];\n    // if ls contains both token & userId, user is authenticated\n    if (token && userId) {\n      instance.defaults.headers.common['x-auth-token'] = token;\n      this.setState({ isAuth: true });\n    }\n  }\n\n  componentWillUnmount() {\n    // remove window close event listener on unmount\n    window.removeEventListener('beforeunload', this.handleWindowClose);\n  }\n\n  isAuthHandler = () => {\n    this.setState({ isAuth: true });\n  }\n\n  render() {\n    // if user is authenticated, load Notely, else provide the other routes\n    // any unknown routes redirects to \"/\" route\n    const routes = this.state.isAuth ? (\n      <Switch>\n        <Route exact path=\"/\" render={() =>\n          <Suspense fallback={<Spinner />}>\n            <Notely userId={localStorage['userId']} logout={this.logout} demo={false}/>\n          </Suspense>\n        } />\n        <Redirect to=\"/\" />\n      </Switch>\n    ) : (\n      <Switch>\n        <Route exact path=\"/login\" render={() => <Auth login={true} isAuth={this.isAuthHandler}/>} />\n        <Route exact path=\"/signup\" render={() => <Auth login={false} isAuth={this.isAuthHandler}/>} />\n        <Route exact path=\"/demo\" render={() => <Suspense fallback={<Spinner />}><Notely demo /></Suspense>} />\n        <Redirect to=\"/login\" />\n      </Switch>\n    );\n    // store is provided to persist the productivity state\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n          <ErrorBoundary>\n            {routes}\n          </ErrorBoundary>\n        </BrowserRouter>\n      </Provider>\n    );\n  }\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}