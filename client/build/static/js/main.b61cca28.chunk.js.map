{"version":3,"sources":["axios.js","components/Spinner/Spinner.module.css","containers/Productivity/store/actions/actionTypes.js","components/ErrorDisplay/ErrorDisplay.module.css","containers/Auth/Auth.module.css","components/ErrorDisplay/ErrorDisplay.js","components/Spinner/Spinner.js","utils/authValidation.js","containers/Auth/Auth.js","containers/Productivity/store/reducers/pomodoro.js","containers/Productivity/store/reducers/timer.js","containers/Productivity/store/reducers/stopwatch.js","App.js","index.js"],"names":["instance","axios","create","baseURL","authInstance","module","exports","RESET_STOPWATCH","STOP_STOPWATCH","STOPWATCH_START","SET_STOPWATCH_TIME","STOPWATCH_FIRST_START","SET_LAP_TIME","CHANGE_POMODORO","RESET_POMODORO","STOP_POMODORO","POMODORO_START","POMODORO_FINISHED","POMODORO_CYCLE_END","CHANGE_TIMER","RESET_TIMER","SET_FIRST_START","PAUSE_TIMER","TIMER_START","TIMER_CYCLE_END","ErrorBoundary","state","hasError","error","info","this","setState","console","log","className","classes","Error","to","props","children","React","Component","Spinner","auth","AuthLoader","Loader","validate","mode","email","pass","confirmPass","length","test","Auth","err","errMsg","loading","remember","toggleLoading","prev","authFailed","emailHandler","e","target","value","passHandler","confirmPassHandler","toggleRemember","clearFields","loginHandler","a","preventDefault","validity","userData","password","post","res","successHandler","response","data","msg","signupHandler","confirmPassword","localStorage","token","Date","getTime","defaults","headers","common","isAuth","Container","InnerContainer","FormContainer","Demo","onClick","login","LoginHeader","SignupHeader","Form","placeholder","onChange","type","LoginErrMsg","SignupErrMsg","LoginHideErrMsg","SignupHideErrMsg","Move","FormBottom","join","LoginBtn","Remember","checked","Link","initialState","displayTime","pomodoroCount","currentMax","sec","min","started","changePomodoro","action","time","resetPomodoro","pomodoroFinished","pomodoroCycleEnd","reducer","actionTypes","hours","maxHours","maxMin","maxSec","firstStart","setFirstStart","displaySec","displayMin","resetTimer","timerCycleEnd","changeTimer","field","name","Number","lapDisplayTime","fractionSec","lapTime","laps","resetStopwatch","unshift","stopStopwatch","stopwatchStart","setStopwatchTime","stopwatchFirstStart","setLapTime","Notely","lazy","rootReducer","combineReducers","stopwatch","stopwatchReducer","pomodoro","pomodoroReducer","timer","timerReducer","store","createStore","applyMiddleware","thunk","App","logout","removeItem","isAuthHandler","setTimeout","newTime","routes","exact","path","render","fallback","demo","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b61cca28.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport const instance = axios.create({\r\n  baseURL: 'https://notely-app.herokuapp.com/api/'\r\n  // baseURL: 'http://localhost:9000/api/'\r\n});\r\n\r\nexport const authInstance = axios.create({\r\n  baseURL: 'https://notely-app.herokuapp.com/api/auth/'\r\n  // baseURL: 'http://localhost:9000/api/auth/'\r\n});\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__MjuV8\",\"AuthLoader\":\"Spinner_AuthLoader__2DSo5\",\"load4\":\"Spinner_load4__n8VQ5\"};","export const RESET_STOPWATCH = 'RESET_STOPWATCH';\r\nexport const STOP_STOPWATCH = 'STOP_STOPWATCH';\r\nexport const START_LAP_TIMER = 'START_LAP_TIMER';\r\nexport const STOPWATCH_START = 'STOPWATCH_START';\r\nexport const SET_STOPWATCH_TIME = 'SET_STOPWATCH_TIME';\r\nexport const STOPWATCH_FIRST_START = 'STOPWATCH_FIRST_START';\r\nexport const SET_LAP_TIME = 'SET_LAP_TIME';\r\n\r\nexport const CHANGE_POMODORO = 'CHANGE_POMODORO';\r\nexport const RESET_POMODORO = 'RESET_POMODORO';\r\nexport const STOP_POMODORO = 'STOP_POMODORO';\r\nexport const POMODORO_START = 'POMODORO_START';\r\nexport const POMODORO_FINISHED = 'POMODORO_FINISHED';\r\nexport const POMODORO_CYCLE_END = 'POMODORO_CYCLE_END';\r\n\r\nexport const CHANGE_TIMER = 'CHANGE_TIMER';\r\nexport const RESET_TIMER = 'RESET_TIMER';\r\nexport const SET_FIRST_START = 'SET_FIRST_START';\r\nexport const PAUSE_TIMER = 'PAUSE_TIMER';\r\nexport const TIMER_START = 'TIMER_START';\r\nexport const TIMER_CYCLE_END = 'TIMER_CYCLE_END';\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Error\":\"ErrorDisplay_Error__3du5n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Auth_Container__x3geK\",\"InnerContainer\":\"Auth_InnerContainer__34AgS\",\"FormContainer\":\"Auth_FormContainer__2D9TT\",\"LoginHeader\":\"Auth_LoginHeader__2f5T9\",\"SignupHeader\":\"Auth_SignupHeader__2wmE1\",\"Form\":\"Auth_Form__1PSZq\",\"LoginBtn\":\"Auth_LoginBtn__SOTxb\",\"FormBottom\":\"Auth_FormBottom__3bF5T\",\"Move\":\"Auth_Move__2D-YX\",\"Demo\":\"Auth_Demo__3sCRP\",\"Link\":\"Auth_Link__2QhgT\",\"Remember\":\"Auth_Remember__zJI4p\",\"LoginErrMsg\":\"Auth_LoginErrMsg__3tQId\",\"SignupErrMsg\":\"Auth_SignupErrMsg__1A9S4\",\"LoginHideErrMsg\":\"Auth_LoginHideErrMsg__2h_FQ\",\"SignupHideErrMsg\":\"Auth_SignupHideErrMsg__mON3K\"};","import React from 'react';\r\nimport classes from './ErrorDisplay.module.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass ErrorBoundary extends React.Component {\r\n  state = {\r\n    hasError: false\r\n  }\r\n\r\n  componentDidCatch(error, info) {\r\n    this.setState({ hasError: true });\r\n    console.log(error, info);\r\n  }\r\n\r\n  render() {\r\n    // if there was an error shows custom error display\r\n    if (this.state.hasError) {\r\n      return (\r\n        <div className={classes.Error}>\r\n          <h1>Something went wrong.</h1>\r\n          <Link to=\"/\"><button>Back to Notely Home</button></Link>\r\n        </div>\r\n      );\r\n    }\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","import React from 'react';\r\nimport classes from './Spinner.module.css';\r\n\r\nconst Spinner = props => (\r\n  <div className={props.auth ? classes.AuthLoader : classes.Loader}>Loading...</div>\r\n);\r\n\r\nexport default Spinner;\r\n","export const validate = (mode, email, pass, confirmPass) => {\r\n  // check if email input is a valid email\r\n  const emailTest = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n  if (email.length === 0 || pass.length === 0) {\r\n    return 'Email and password must not be empty.';\r\n  }\r\n  if (!emailTest.test(email)) {\r\n    return 'Please enter a valid email.';\r\n  }\r\n  if (mode === 'signup') {\r\n    if (pass.length > 70) {\r\n      return 'Password must be less than 70 characters.';\r\n    }\r\n    if (pass.length < 7) {\r\n      return 'Password must be at least 7 characters long.';\r\n    }\r\n    if (pass !== confirmPass) {\r\n      return 'Confirm password must be equal to password.';\r\n    }\r\n  }\r\n  return '';\r\n};\r\n","import React, { Component } from 'react';\r\nimport classes from './Auth.module.css';\r\nimport Spinner from '../../components/Spinner/Spinner';\r\nimport { Link } from 'react-router-dom';\r\nimport { authInstance as axios, instance } from '../../axios';\r\nimport { validate } from '../../utils/authValidation';\r\n\r\nclass Auth extends Component {\r\n  state = {\r\n    email: '',\r\n    pass: '',\r\n    confirmPass: '',\r\n    err: false,\r\n    errMsg: '',\r\n    loading: false,\r\n    remember: false\r\n  }\r\n\r\n  toggleLoading = () => this.setState(prev => ({ loading: !prev.loading, err: false, errMsg: '' }))\r\n\r\n  authFailed = (errMsg) => this.setState({ loading: false, err: true, errMsg })\r\n\r\n  emailHandler = e => this.setState({ email: e.target.value, err: false })\r\n\r\n  passHandler = e => this.setState({ pass: e.target.value, err: false })\r\n\r\n  confirmPassHandler = e => this.setState({ confirmPass: e.target.value, err: false })\r\n\r\n  toggleRemember = () => this.setState(prev => ({ remember: !prev.remember }))\r\n\r\n  clearFields = () => {\r\n    this.setState({\r\n      email: '',\r\n      pass: '',\r\n      confirmPass: '',\r\n      loading: false,\r\n      err: false,\r\n      errMsg: '',\r\n      remember: false\r\n    });\r\n  }\r\n\r\n  loginHandler = async (e) => {\r\n    e.preventDefault();\r\n    // return if already trying to login\r\n    if (this.state.loading) { return; }\r\n    // return if login form is invalid\r\n    const validity = validate('login', this.state.email, this.state.pass);\r\n    if (validity !== '') { return this.authFailed(validity); }\r\n    // show spinner if loading\r\n    this.toggleLoading();\r\n    const userData = { email: this.state.email, password: this.state.pass,\r\n      remember: this.state.remember };\r\n    try {\r\n      const res = await axios.post('login', userData);\r\n      this.successHandler(res, userData);\r\n    } catch(err) {\r\n      if (err.response) { return this.authFailed(err.response.data.msg); }\r\n      this.authFailed('There was an error logging in.');\r\n    }\r\n  }\r\n\r\n  signupHandler = async (e) => {\r\n    e.preventDefault();\r\n    if (this.state.loading) { return; }\r\n    // return if signup form is invalid\r\n    const validity = validate('signup', this.state.email, this.state.pass, this.state.confirmPass);\r\n    if (validity !== '') { return this.authFailed(validity); }\r\n    this.toggleLoading();\r\n    const userData = { email: this.state.email, password: this.state.pass,\r\n      confirmPassword: this.state.confirmPass, remember: this.state.remember };\r\n    try {\r\n      const res = await axios.post('signup', userData);\r\n      this.successHandler(res, userData);\r\n    } catch(err) {\r\n      if (err.response) { return this.authFailed(err.response.data.msg); }\r\n      this.authFailed('There was an error signing up');\r\n    }\r\n  }\r\n\r\n  successHandler = (res, userData) => {\r\n    localStorage['token'] = res.data.token;\r\n    if (userData.remember) {\r\n      // expires in 7 days\r\n      localStorage['expirationDate'] = new Date(new Date().getTime() + 604800000);\r\n      localStorage['expirationTime'] = '604800000';\r\n    } else {\r\n      // expires in 3hr\r\n      localStorage['expirationDate'] = new Date(new Date().getTime() + 10800000);\r\n      localStorage['expirationTime'] = '10800000';\r\n    }\r\n    instance.defaults.headers.common['x-auth-token'] = res.data.token;\r\n    localStorage['email'] = userData.email;\r\n    this.clearFields();\r\n    this.props.isAuth();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={classes.Container}>\r\n        <div className={classes.InnerContainer}>\r\n          <div className={classes.FormContainer}>\r\n            <p className={classes.Demo}>See a demo <Link to=\"/demo\" onClick={this.clearFields}>here</Link></p>\r\n            <h1 className={this.props.login ? classes.LoginHeader : classes.SignupHeader}>Notely</h1>\r\n            <div className={classes.Form}>\r\n              <input placeholder=\"Email\" value={this.state.email} onChange={this.emailHandler} />\r\n              <input type=\"password\" placeholder=\"Password\" value={this.state.pass} onChange={this.passHandler} />\r\n              {!this.props.login &&\r\n              <input type=\"password\" placeholder=\"Confirm Password\" value={this.state.confirmPass} onChange={this.confirmPassHandler} /> }\r\n            </div>\r\n            <p className={this.state.err ? (this.props.login ? classes.LoginErrMsg : classes.SignupErrMsg) :\r\n              (this.props.login ? classes.LoginHideErrMsg : classes.SignupHideErrMsg)}>{this.state.errMsg}</p>\r\n            <div className={this.state.err ? [classes.Move, classes.FormBottom].join(' ') : classes.FormBottom}>\r\n              <button className={classes.LoginBtn} onClick={this.props.login ? this.loginHandler : this.signupHandler}>\r\n                {this.props.login ? 'login' : 'create'}\r\n              </button>\r\n              <div className={classes.Remember}>\r\n                <input type=\"checkbox\" onChange={this.toggleRemember} checked={this.state.remember}/>\r\n                <p>Remember me</p>\r\n              </div>\r\n            </div>\r\n            {this.state.loading && <Spinner auth />}\r\n            <p className={classes.Link}>{this.props.login ? 'Not registered? ' : 'Already registered? '}\r\n              <Link to={this.props.login? '/signup' : '/login'} onClick={this.clearFields}>{this.props.login ? 'Create an account' : 'Login'}</Link>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Auth;\r\n","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n  displayTime: '25:00',\r\n  pomodoroCount: 0,\r\n  currentMax: 25,\r\n  sec: 0,\r\n  min: 25,\r\n  started: false\r\n};\r\n\r\n// set the current mode of the timer (pomodoro/short break/long break)\r\nconst changePomodoro = (state, action) => {\r\n  const displayTime = `${action.time}:00`;\r\n  return { ...state, min: action.time, sec: 0, started: false, currentMax: action.time, displayTime };\r\n};\r\n\r\nconst resetPomodoro = (state, action) => {\r\n  const displayTime = `${state.currentMax}:00`;\r\n  return { ...state, started: false, min: state.currentMax, sec: 0, displayTime };\r\n};\r\n\r\nconst pomodoroFinished = (state, action) => {\r\n  const displayTime = `${state.currentMax}:00`;\r\n  let pomodoroCount = state.pomodoroCount + 1;\r\n  return { ...state, started: false, min: state.currentMax, sec: 0, displayTime, pomodoroCount };\r\n};\r\n\r\n// called after every 1000ms cycle of timerFunc\r\nconst pomodoroCycleEnd = (state, action) => {\r\n  return { ...state, displayTime: action.displayTime, sec: action.sec, min: action.min };\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch(action.type) {\r\n    case actionTypes.CHANGE_POMODORO: return changePomodoro(state, action);\r\n    case actionTypes.RESET_POMODORO: return resetPomodoro(state, action);\r\n    case actionTypes.STOP_POMODORO: return { ...state, started: false };\r\n    case actionTypes.POMODORO_START: return { ...state, started: true };\r\n    case actionTypes.POMODORO_FINISHED: return pomodoroFinished(state, action);\r\n    case actionTypes.POMODORO_CYCLE_END: return pomodoroCycleEnd(state, action);\r\n    default: return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n  displayTime: '',\r\n  hours: 0,\r\n  maxHours: 0,\r\n  min: 0,\r\n  maxMin: 0,\r\n  sec: 0,\r\n  maxSec: 0,\r\n  started: false,\r\n  firstStart: false\r\n};\r\n\r\n// initializes time display when timer starts\r\nconst setFirstStart = (state, action) => {\r\n  const displaySec = state.maxSec < 10 ? '0' + state.maxSec : state.maxSec;\r\n  const displayMin = state.maxMin < 10 ? '0' + state.maxMin : state.maxMin;\r\n  const displayTime = state.maxHours === 0 ? `${state.min}:${displaySec}` : `${state.hours}:${displayMin}:${displaySec}`;\r\n  return { ...state, firstStart: true, displayTime };\r\n};\r\n\r\n// resets timer time display & sets all time counts back to original values\r\nconst resetTimer = (state, action) => {\r\n  const displaySec = state.maxSec < 10 ? '0' + state.maxSec : state.maxSec;\r\n  const displayMin = state.maxMin < 10 ? '0' + state.maxMin : state.maxMin;\r\n  const displayTime = state.maxHours === 0 ? `${state.maxMin}:${displaySec}` : `${state.maxHours}:${displayMin}:${displaySec}`;\r\n  return { ...state, started: false, firstStart: false, hours: state.maxHours, min: state.maxMin, sec: state.maxSec, displayTime };\r\n};\r\n\r\n// called after every 1000ms cycle of timerFunc\r\nconst timerCycleEnd = (state, action) => {\r\n  const displaySec = action.sec < 10 ? '0' + action.sec : action.sec;\r\n  const displayMin = action.min < 10 ? '0' + action.min : action.min;\r\n  const displayTime = action.hours === 0 ? `${action.min}:${displaySec}` : `${action.hours}:${displayMin}:${displaySec}`;\r\n  return { ...state, hours: action.hours, min: action.min, sec: action.sec, displayTime };\r\n};\r\n\r\n// update the input values\r\nconst changeTimer = (state, action) => {\r\n  // cant have negative time\r\n  if (action.e.value < 0) { return { ...state }; }\r\n  const field = action.e.name === 'maxHours' ? 'hours' : action.e.name === 'maxMin' ? 'min' : 'sec';\r\n  const value = Number(action.e.value);\r\n  return { ...state, [action.e.name]: value, [field]: value };\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch(action.type) {\r\n    case actionTypes.SET_FIRST_START: return setFirstStart(state, action);\r\n    case actionTypes.PAUSE_TIMER: return { ...state, started: false };\r\n    case actionTypes.TIMER_START: return { ...state, started: true };\r\n    case actionTypes.RESET_TIMER: return resetTimer(state, action);\r\n    case actionTypes.TIMER_CYCLE_END: return timerCycleEnd(state, action);\r\n    case actionTypes.CHANGE_TIMER: return changeTimer(state, action);\r\n    default: return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n  displayTime: '00:00.0',\r\n  lapDisplayTime: '00:00.0',\r\n  time: {\r\n    fractionSec: 0,\r\n    sec: 0,\r\n    min: 0,\r\n    started: false\r\n  },\r\n  lapTime: {\r\n    fractionSec: 0,\r\n    sec: 0,\r\n    min: 0,\r\n    started: false\r\n  },\r\n  laps: [],\r\n  firstStart: false\r\n};\r\n\r\nconst resetStopwatch = (state, action) => {\r\n  // resets time & laps if left control button in reset mode\r\n  if (!state.time.started) {\r\n    const time = { ...state.time };\r\n    time.fractionSec = 0;\r\n    time.sec = 0;\r\n    time.min = 0;\r\n    time.started = false;\r\n    const lapTime = { ...state.lapTime };\r\n    lapTime.fractionSec = 0;\r\n    lapTime.sec = 0;\r\n    lapTime.min = 0;\r\n    lapTime.started = false;\r\n    return { ...state, time, lapTime, displayTime: '00:00.0', laps: [], firstStart: false };\r\n  }\r\n  // creates a new lap if left control button in lap mode\r\n  const lapTime = { ...state.lapTime };\r\n  const displaySec = lapTime.sec < 10 ? '0' + lapTime.sec : lapTime.sec;\r\n  const displayMin = lapTime.min < 10 ? '0' + lapTime.min : lapTime.min;\r\n  const lapDisplayTime = `${displayMin}:${displaySec}.${lapTime.fractionSec}`;\r\n  lapTime.fractionSec = 0;\r\n  lapTime.sec = 0;\r\n  lapTime.min = 0;\r\n  lapTime.started = false;\r\n  const laps = [...state.laps];\r\n  laps.unshift(state.lapDisplayTime);\r\n  return { ...state, lapTime, lapDisplayTime, laps };\r\n};\r\n\r\nconst stopStopwatch = (state, action) => {\r\n  const time = { ...state.time };\r\n  time.started = false;\r\n  return { ...state, time };\r\n};\r\n\r\nconst stopwatchStart = (state, action) => {\r\n  const time = { ...state.time };\r\n  time.started = true;\r\n  const lapTime = { ...state.lapTime };\r\n  lapTime.started = true;\r\n  return { ...state, time, lapTime };\r\n};\r\n\r\nconst setStopwatchTime = (state, action) => {\r\n  return { ...state, time: action.time, displayTime: action.displayTime };\r\n};\r\n\r\nconst stopwatchFirstStart = (state, action) => {\r\n  return { ...state, firstStart: true };\r\n};\r\n\r\nconst setLapTime = (state, action) => {\r\n  return { ...state, lapTime: action.lapTime, lapDisplayTime: action.lapDisplayTime };\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.RESET_STOPWATCH: return resetStopwatch(state, action);\r\n    case actionTypes.STOP_STOPWATCH: return stopStopwatch(state, action);\r\n    case actionTypes.STOPWATCH_START: return stopwatchStart(state, action);\r\n    case actionTypes.SET_STOPWATCH_TIME: return setStopwatchTime(state, action);\r\n    case actionTypes.STOPWATCH_FIRST_START: return stopwatchFirstStart(state, action);\r\n    case actionTypes.SET_LAP_TIME: return setLapTime(state, action);\r\n    default: return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import React, { Component, Suspense } from 'react';\r\nimport ErrorBoundary from './components/ErrorDisplay/ErrorDisplay';\r\nimport Auth from './containers/Auth/Auth';\r\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\r\nimport Spinner from './components/Spinner/Spinner';\r\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport thunk from 'redux-thunk';\r\nimport pomodoroReducer from './containers/Productivity/store/reducers/pomodoro';\r\nimport timerReducer from './containers/Productivity/store/reducers/timer';\r\nimport stopwatchReducer from './containers/Productivity/store/reducers/stopwatch';\r\nimport { instance } from './axios';\r\nconst Notely = React.lazy(() => import('./containers/Notely'));\r\n\r\nconst rootReducer = combineReducers({\r\n  stopwatch: stopwatchReducer,\r\n  pomodoro: pomodoroReducer,\r\n  timer: timerReducer\r\n});\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\nlet expirationTimeout;\r\n\r\nclass App extends Component {\r\n  state = {\r\n    isAuth: false\r\n  }\r\n\r\n  logout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('remember');\r\n    localStorage.removeItem('email');\r\n    localStorage.removeItem('expirationDate');\r\n    localStorage.removeItem('expirationTime');\r\n    delete instance.defaults.headers.common['x-auth-token'];\r\n    this.setState({ isAuth: false });\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage['token'];\r\n    // if ls contains token, try autologin\r\n    if (!localStorage['token'] || !localStorage['expirationDate']) { return; }\r\n    if (new Date(localStorage['expirationDate']) <= new Date()) { return this.logout(); }\r\n    instance.defaults.headers.common['x-auth-token'] = localStorage['token'];\r\n    const newTime = new Date(localStorage['expirationDate']).getTime() - new Date().getTime();\r\n    localStorage['expirationTime'] = newTime;\r\n    this.isAuthHandler();\r\n  }\r\n\r\n  isAuthHandler = () => {\r\n    this.setState({ isAuth: true });\r\n    expirationTimeout = setTimeout(() => this.logout(), Number(localStorage['expirationTime']));\r\n  }\r\n\r\n  render() {\r\n    // if user is authenticated, load Notely, else provide the other routes\r\n    // any unknown routes redirects to \"/\" route\r\n    const routes = this.state.isAuth ? (\r\n      <Switch>\r\n        <Route exact path=\"/\" render={() =>\r\n          <Suspense fallback={<Spinner />}>\r\n            <Notely logout={this.logout} demo={false}/>\r\n          </Suspense>\r\n        } />\r\n        <Redirect to=\"/\" />\r\n      </Switch>\r\n    ) : (\r\n      <Switch>\r\n        <Route exact path=\"/login\" render={() => <Auth login isAuth={this.isAuthHandler} />} />\r\n        <Route exact path=\"/signup\" render={() => <Auth login={false} isAuth={this.isAuthHandler} />} />\r\n        <Route exact path=\"/demo\" render={() => <Suspense fallback={<Spinner />}><Notely demo /></Suspense>} />\r\n        <Redirect to=\"/login\" />\r\n      </Switch>\r\n    );\r\n    // store used to persist productivity state\r\n    return (\r\n      <Provider store={store}>\r\n        <BrowserRouter>\r\n          <ErrorBoundary>\r\n            {routes}\r\n          </ErrorBoundary>\r\n        </BrowserRouter>\r\n      </Provider>\r\n    );\r\n  }\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}